# Copyright 2019 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.5'

services:
  avalon-tests:
    image: avalon-shell:${ISOLATION_ID}
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - IMAGE=$IMAGE
        - DISTRO=$DISTRO
    working_dir: "/project/avalon/"
    entrypoint: "bash -c \"\
        ./tools/run_tests.sh -l avalon-listener \""
    depends_on:
      - avalon-enclave-manager
      - avalon-listener

  avalon-enclave-manager:
    image: avalon-enclave-manager:${ISOLATION_ID}
    build:
      context: ..
      dockerfile: enclave_manager/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - TCF_DEBUG_BUILD=${TCF_DEBUG_BUILD:-}
        - ENCLAVE_TYPE=singleton
        - IMAGE=$IMAGE
        - DISTRO=$DISTRO
        - ATTESTATION_TYPE=epid
    command: |
      bash -c "
        enclave_manager --lmdb_url http://avalon-lmdb:9090
        tail -f /dev/null
      "
    depends_on:
      - avalon-lmdb

  avalon-lmdb:
    image: avalon-lmdb:${ISOLATION_ID}
    build:
      context: ..
      dockerfile: shared_kv_storage/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - DISTRO=$DISTRO
        - IMAGE=$IMAGE
    expose:
      - 9090
    command: |
      bash -c "
        kv_storage --bind http://avalon-lmdb:9090
        tail -f /dev/null
      "

  avalon-listener:
    image: avalon-listener:${ISOLATION_ID}
    build:
      context: ..
      dockerfile: ./listener/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
        - DISTRO=$DISTRO
        - IMAGE=$IMAGE
    expose:
      - 1947
    command: |
      bash -c "
        avalon_listener --bind http://avalon-listener:1947 --lmdb_url http://avalon-lmdb:9090
        tail -f /dev/null
      "
    depends_on:
      - avalon-lmdb


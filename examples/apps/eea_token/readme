
EEA token execution logic allows running the execution logic based on token requests,
alse see check https://github.com/EntEthAlliance/Trusted-Token token_validation.cpp
is for Scone platform execution.
Please directly call the method "string token_valid_procedure(string input)" in
execution_logic.cpp for other SGX frameworks.


**********************************************************************
**************************** Input format ****************************
**********************************************************************
------ issue burn tokens input ------
issue_burn_tokens[]: [org_ID, [member_employee_ID, requested_EEA_activity, activity_realized]]
-------- redeem tokens input --------
redeem[]:[org_ID, redeem_token_number]
--------- share tokens input --------
share[]: [ord_ID, share_to_amount[share_token_number, share_to]]

Example:
issue_burn_tokens[]:[{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741368,{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741361,3,true},{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741364,2,true},{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741364,3,true}},{did:ethr:111d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741301,{did:ethr:111d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb841311,3,true},{did:ethr:111d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb841312,2,false}}]

redeem[]:[{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741368,100},{did:ethr:111d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741301,90}]

share[]:[{did:ethr:8a5d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741368,{100, did:ethr:aaad93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741301},{200, did:ethr:bbbd93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741301}},{did:ethr:111d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb741301,{400, did:ethr:222d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb841301},{500, did:ethr:333d93cc5613ab0ace80a282029ff721923325ce276db5cadcb62537bb841301}}]





**********************************************************************
**************************** Output format ***************************
**********************************************************************
request_type       // This line is a type number 1: Issue/burn tokens.  2: redeem tokens.  3:Share
return_code        // This line is app return number:  return 0 (Success) or other codes (Fail, see details in doc or execution_logic.h))
request_result     // This is the request result: 2 lines needed for Issue/burn request; and 1 line needed for redeem and share request.
----------------------------------------------------------------------

           Output examples based on the above input data
---------------- Output example Issue/burn tokens --------------------
1
0
did:ethr:8a5d9...68||105, did:ethr:8a5d9...60||95                                                                     // This line represents issue/burn token
did:ethr:8a5d9...61||100, did:ethr:8a5d9...64||105, did:ethr:111d9...11||100, did:ethr:111d9...12||-5                 // This line represents issue/burn individual reputation

--------------- Output example redeem tokens result ------------------
2
0
did:ethr:8a5d9...68||100, did:ethr:111d9...01||90 

-----------------Output example Share tokens result ------------------
3
0
did:ethr:8a5d9...68||100||did:ethr:aaad9...01, did:ethr:8a5d9...68||200||did:ethr:bbbd9...01, did:ethr:111d9...01||400||did:ethr:222d9...01, did:ethr:111d9...01||500||did:ethr:333d9...01





*****************************************************************************************************************************************************************************************
NOTE: This output format has to be converted to conform with the smart contract API (i.e. feed to onchain smart contracts), please check https://github.com/EntEthAlliance/Trusted-Token
*****************************************************************************************************************************************************************************************








